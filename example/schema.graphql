type Post {
  id: ID!
  title: String!
  content: String!
}

type Query {
  getPost(id: ID!): Post
  getAllPosts: [Post!]!
  getPostId(id: ID!): PostIdUpdateDataInput
}

type Mutation {
  createPost(title: String!, content: String!): Post!
  updatePost(id: ID!, title: String, content: String): Post!
  deletePost(id: ID!): ID!
  updatePostWithInput(id: ID!, data: PostUpdateDataInput): Post
  createPostWithInput(data: PostCreateDataInput): Post
}

type Subscription {
  postCreated: Post!
  postUpdated(id: ID!): Post!
  postDeleted(id: ID!): ID!
}

input PostUpdateDataInput {
  id: ID
  title: String
  content: String
}

input PostCreateDataInput {
  email: String
  shouldNotify: Boolean!
  nestedInput: PostUpdateNestedDataInput
}

input PostUpdateNestedDataInput {
  email: String
  shouldNotify: Boolean!
}

type PostIdUpdateDataInput {
  id: ID
}
